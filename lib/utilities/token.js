'use strict';

function tokenIndexFromTerminalNodeAndTokens(terminalNode, tokens) {
  var significantToken = terminalNode.getSignificantToken(),
      significantTokenIndex = tokens.indexOf(significantToken),
      tokenIndex = '(' + significantTokenIndex + ')';

  return tokenIndex;
}

function tokenIndexesFromNonTerminalNodeAndTokens(nonTerminalNode, tokens) {
  var tokenIndexes = void 0;

  var nonTerminalNodeNullified = nonTerminalNode.isNullified();

  if (nonTerminalNodeNullified) {
    tokenIndexes = '';
  } else {
    var firstSignificantToken = nonTerminalNode.getFirstSignificantToken(),
        lastSignificantToken = nonTerminalNode.getLastSignificantToken(),
        firstSignificantTokenIndex = tokens.indexOf(firstSignificantToken),
        lastSignificantTokenIndex = tokens.indexOf(lastSignificantToken);

    tokenIndexes = firstSignificantTokenIndex !== lastSignificantTokenIndex ? '(' + firstSignificantTokenIndex + '-' + lastSignificantTokenIndex + ')' : '(' + firstSignificantTokenIndex + ')';
  }

  return tokenIndexes;
}

module.exports = {
  tokenIndexFromTerminalNodeAndTokens: tokenIndexFromTerminalNodeAndTokens,
  tokenIndexesFromNonTerminalNodeAndTokens: tokenIndexesFromNonTerminalNodeAndTokens
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi91dGlsaXRpZXMvdG9rZW4uanMiXSwibmFtZXMiOlsidG9rZW5JbmRleEZyb21UZXJtaW5hbE5vZGVBbmRUb2tlbnMiLCJ0ZXJtaW5hbE5vZGUiLCJ0b2tlbnMiLCJzaWduaWZpY2FudFRva2VuIiwiZ2V0U2lnbmlmaWNhbnRUb2tlbiIsInNpZ25pZmljYW50VG9rZW5JbmRleCIsImluZGV4T2YiLCJ0b2tlbkluZGV4IiwidG9rZW5JbmRleGVzRnJvbU5vblRlcm1pbmFsTm9kZUFuZFRva2VucyIsIm5vblRlcm1pbmFsTm9kZSIsInRva2VuSW5kZXhlcyIsIm5vblRlcm1pbmFsTm9kZU51bGxpZmllZCIsImlzTnVsbGlmaWVkIiwiZmlyc3RTaWduaWZpY2FudFRva2VuIiwiZ2V0Rmlyc3RTaWduaWZpY2FudFRva2VuIiwibGFzdFNpZ25pZmljYW50VG9rZW4iLCJnZXRMYXN0U2lnbmlmaWNhbnRUb2tlbiIsImZpcnN0U2lnbmlmaWNhbnRUb2tlbkluZGV4IiwibGFzdFNpZ25pZmljYW50VG9rZW5JbmRleCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLFNBQVNBLG1DQUFULENBQTZDQyxZQUE3QyxFQUEyREMsTUFBM0QsRUFBbUU7QUFDakUsTUFBTUMsbUJBQW1CRixhQUFhRyxtQkFBYixFQUF6QjtBQUFBLE1BQ01DLHdCQUF3QkgsT0FBT0ksT0FBUCxDQUFlSCxnQkFBZixDQUQ5QjtBQUFBLE1BRU1JLG1CQUFpQkYscUJBQWpCLE1BRk47O0FBSUEsU0FBT0UsVUFBUDtBQUNEOztBQUVELFNBQVNDLHdDQUFULENBQWtEQyxlQUFsRCxFQUFtRVAsTUFBbkUsRUFBMkU7QUFDekUsTUFBSVEscUJBQUo7O0FBRUEsTUFBTUMsMkJBQTJCRixnQkFBZ0JHLFdBQWhCLEVBQWpDOztBQUVBLE1BQUlELHdCQUFKLEVBQThCO0FBQzVCRCxtQkFBZSxFQUFmO0FBQ0QsR0FGRCxNQUVPO0FBQ0wsUUFBTUcsd0JBQXdCSixnQkFBZ0JLLHdCQUFoQixFQUE5QjtBQUFBLFFBQ01DLHVCQUF1Qk4sZ0JBQWdCTyx1QkFBaEIsRUFEN0I7QUFBQSxRQUVNQyw2QkFBNkJmLE9BQU9JLE9BQVAsQ0FBZU8scUJBQWYsQ0FGbkM7QUFBQSxRQUdNSyw0QkFBNEJoQixPQUFPSSxPQUFQLENBQWVTLG9CQUFmLENBSGxDOztBQUtBTCxtQkFBZ0JPLCtCQUErQkMseUJBQWhDLFNBQ0tELDBCQURMLFNBQ21DQyx5QkFEbkMsZUFFT0QsMEJBRlAsTUFBZjtBQUdEOztBQUVELFNBQU9QLFlBQVA7QUFDRDs7QUFFRFMsT0FBT0MsT0FBUCxHQUFpQjtBQUNmcEIsMEVBRGU7QUFFZlE7QUFGZSxDQUFqQiIsImZpbGUiOiJ0b2tlbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gdG9rZW5JbmRleEZyb21UZXJtaW5hbE5vZGVBbmRUb2tlbnModGVybWluYWxOb2RlLCB0b2tlbnMpIHtcbiAgY29uc3Qgc2lnbmlmaWNhbnRUb2tlbiA9IHRlcm1pbmFsTm9kZS5nZXRTaWduaWZpY2FudFRva2VuKCksXG4gICAgICAgIHNpZ25pZmljYW50VG9rZW5JbmRleCA9IHRva2Vucy5pbmRleE9mKHNpZ25pZmljYW50VG9rZW4pLFxuICAgICAgICB0b2tlbkluZGV4ID0gYCgke3NpZ25pZmljYW50VG9rZW5JbmRleH0pYDtcblxuICByZXR1cm4gdG9rZW5JbmRleDtcbn1cblxuZnVuY3Rpb24gdG9rZW5JbmRleGVzRnJvbU5vblRlcm1pbmFsTm9kZUFuZFRva2Vucyhub25UZXJtaW5hbE5vZGUsIHRva2Vucykge1xuICBsZXQgdG9rZW5JbmRleGVzO1xuXG4gIGNvbnN0IG5vblRlcm1pbmFsTm9kZU51bGxpZmllZCA9IG5vblRlcm1pbmFsTm9kZS5pc051bGxpZmllZCgpO1xuXG4gIGlmIChub25UZXJtaW5hbE5vZGVOdWxsaWZpZWQpIHtcbiAgICB0b2tlbkluZGV4ZXMgPSAnJztcbiAgfSBlbHNlIHtcbiAgICBjb25zdCBmaXJzdFNpZ25pZmljYW50VG9rZW4gPSBub25UZXJtaW5hbE5vZGUuZ2V0Rmlyc3RTaWduaWZpY2FudFRva2VuKCksXG4gICAgICAgICAgbGFzdFNpZ25pZmljYW50VG9rZW4gPSBub25UZXJtaW5hbE5vZGUuZ2V0TGFzdFNpZ25pZmljYW50VG9rZW4oKSxcbiAgICAgICAgICBmaXJzdFNpZ25pZmljYW50VG9rZW5JbmRleCA9IHRva2Vucy5pbmRleE9mKGZpcnN0U2lnbmlmaWNhbnRUb2tlbiksXG4gICAgICAgICAgbGFzdFNpZ25pZmljYW50VG9rZW5JbmRleCA9IHRva2Vucy5pbmRleE9mKGxhc3RTaWduaWZpY2FudFRva2VuKTtcblxuICAgIHRva2VuSW5kZXhlcyA9IChmaXJzdFNpZ25pZmljYW50VG9rZW5JbmRleCAhPT0gbGFzdFNpZ25pZmljYW50VG9rZW5JbmRleCkgP1xuICAgICAgICAgICAgICAgICAgICBgKCR7Zmlyc3RTaWduaWZpY2FudFRva2VuSW5kZXh9LSR7bGFzdFNpZ25pZmljYW50VG9rZW5JbmRleH0pYCA6XG4gICAgICAgICAgICAgICAgICAgICAgYCgke2ZpcnN0U2lnbmlmaWNhbnRUb2tlbkluZGV4fSlgO1xuICB9XG5cbiAgcmV0dXJuIHRva2VuSW5kZXhlcztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHRva2VuSW5kZXhGcm9tVGVybWluYWxOb2RlQW5kVG9rZW5zLFxuICB0b2tlbkluZGV4ZXNGcm9tTm9uVGVybWluYWxOb2RlQW5kVG9rZW5zXG59O1xuIl19